Name: Wonkeun No
Student ID: 145095196
Section: NBB

This week’s workshop is very interesting to me. Because I haven’t had a chance to evaluate code’s performance as I dealt with relatively small amount of data compared to computing power. I can see smart thinking can improve the code performance significantly. std:move() is from utility standard library which can reference to rvalue instead of reallocate and re-assign to new memory space as this data set or object’s lifetime will end shortly. I could see that StringSet content memory address was not changed after move() operation to another object. As a result of that, move constructor and move assignment performance are thousands times faster than copy constructor and copy assignment in my case. This also shows me that memory allocation and copying data into it are very expensive operations. And I learned how size_t is different from int data type. I was mindlessly comparing int vs size_t in my loop operation. But it’s important that I have a clear understanding what data types I use and shouldn’t expect implicit conversion, because it could lead to an unexpected behaviour from data range deviation. 