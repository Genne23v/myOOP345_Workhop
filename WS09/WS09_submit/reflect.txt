Name: Wonkeun No
Student ID: 145095196
Section: NBB

Binary file contains the data without any formatting which is ok when storing encrypted data since we will not be able to read anyway. As it requires no formatting or conversion, binary files are more efficient to read and write a file. I used an fstream object to read and write a file with binary mode set as fstream fin; fin.open(file, ios::in | ios::binary);. I think it's more convenient to use fstream rather than ifstream/ofstream as one object can do both read and write operations. 

I think the reason that we bind a function is that it's easier and less error prone. I used namespace placeholder to use a placeholder argument while keeping all the other arguments that are same for all threads. I binded converter functor as auto cvtBind = bind(convertFtr, _1, key, qtrPos, Cryptor());. It was very useful not to repeat the same variable and the placeholder is very visible in the syntax. 

I checked the time of execution among not using thread, 2threads and 4 threads using chrono library. 4 threads are faster than 2 threads most of times, but the laps vary constantly and 4 threads are not always faster. However, unexpectedly single thread is somehow much faster than those threaded ones. It took only less than 20 microseconds in both encryption and decryption while threaded took thousands microseconds for encryption and hundreds microseconds for decryption. I think this is becuase the amount of task is relatively small and threaded task probably took more time to prioritize, schedule and execute, etc. 
Using threads needs to be implemented carefully as I experienced illegal memory access many times during my implementation. One byte of wrong calculation led to a run-time error which should be avoided all the time. 

